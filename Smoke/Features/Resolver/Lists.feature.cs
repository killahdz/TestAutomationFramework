// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Smoke.Features.Resolver
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Smoke.Features.Resolver.Lists")]
    public partial class Smoke_Features_Resolver_ListsFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Lists.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Smoke.Features.Resolver.Lists", "\tAs a resolver, I want to be able to go to an item list \r\n\tand open requests to v" +
                    "erify there are no script errors", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ResolverList")]
        [NUnit.Framework.CategoryAttribute("dev")]
        [NUnit.Framework.CategoryAttribute("patch")]
        [NUnit.Framework.CategoryAttribute("uat")]
        [NUnit.Framework.CategoryAttribute("prod")]
        [NUnit.Framework.CategoryAttribute("video")]
        [NUnit.Framework.TestCaseAttribute("*sc_req_item_list*", "Requested Items List", "sc_req_item_list.do?sysparm_orderdesc=number", "form_body", null)]
        [NUnit.Framework.TestCaseAttribute("*sc_task_list*", "Task List", "sc_task_list.do?sysparm_orderdesc=number", "form_body", null)]
        [NUnit.Framework.TestCaseAttribute("*u_escalation_task_list*", "Escalation Task List", "u_escalation_task_list.do?sysparm_orderdesc=number", "form_body", null)]
        [NUnit.Framework.TestCaseAttribute("*incident_list*", "Ticket List", "incident_list.do?sysparm_orderdesc=number", "form_body", null)]
        [NUnit.Framework.TestCaseAttribute("*u_incident_task_list*", "Ticket Task List", "u_incident_task_list.do?sysparm_orderdesc=number", "form_body", null)]
        [NUnit.Framework.TestCaseAttribute("*task_sla_list*", "Task SLA List", "task_sla_list.do?sysparm_orderdesc=number", "form_body", null)]
        [NUnit.Framework.TestCaseAttribute("*change_request_list*", "Change Request List", "change_request_list.do?sysparm_orderdesc=number", "form_body", null)]
        [NUnit.Framework.TestCaseAttribute("*new_call_list*", "Calls List", "new_call_list.do?sysparm_orderdesc=number", "form_body", null)]
        [NUnit.Framework.TestCaseAttribute("*hr_list*", "Human Resource Request List", "hr_list.do?sysparm_orderdesc=number", "form_body", null)]
        [NUnit.Framework.TestCaseAttribute("*u_general_request_list*", "General Request List", "u_general_request_list.do?sysparm_orderdesc=number", "form_body", null)]
        [NUnit.Framework.TestCaseAttribute("*u_general_request_finance_list*", "General Request Finance List", "u_general_request_finance_list.do?sysparm_orderdesc=number", "form_body", null)]
        [NUnit.Framework.TestCaseAttribute("*dmn_demand_list*", "Demand List", "dmn_demand_list.do?sysparm_orderdesc=number", "form_body", null)]
        [NUnit.Framework.TestCaseAttribute("*pm_project_list*", "Project List", "pm_project_list.do?sysparm_orderdesc=number", "form_body", null)]
        [NUnit.Framework.TestCaseAttribute("*problem_list*", "Problem List", "problem_list.do?sysparm_orderdesc=number", "form_body", null)]
        [NUnit.Framework.TestCaseAttribute("*u_sts_request_list*", "STS List", "u_sts_request_list.do?sysparm_orderdesc=number", "form_body", null)]
        [NUnit.Framework.TestCaseAttribute("*grc_control_list*", "Control List", "grc_control_list.do", "form_body", null)]
        [NUnit.Framework.TestCaseAttribute("*grc_control_test_definition_list*", "Control Test Definition List", "grc_control_test_definition_list.do?sysparm_orderdesc=updated", "form_body", null)]
        [NUnit.Framework.TestCaseAttribute("*grc_control_test_list*", "Control Test List", "grc_control_test_list.do?sysparm_orderdesc=number", "form_body", null)]
        [NUnit.Framework.TestCaseAttribute("*grc_remediation_list*", "Remediation List", "grc_remediation_list.do?sysparm_orderdesc=number", "form_body", null)]
        [NUnit.Framework.TestCaseAttribute("*grc_audit_list*", "Assurance Reviews List", "grc_audit_list.do?sysparm_orderdesc=number", "form_body", null)]
        [NUnit.Framework.TestCaseAttribute("*u_sp_site_profile_list*", "Site Profile List", "u_sp_site_profile_list.do?sysparm_orderdesc=number", "form_body", null)]
        [NUnit.Framework.TestCaseAttribute("*u_sp_security_plan_list*", "Security Plan List", "u_sp_security_plan_list.do?sysparm_orderdesc=number", "form_body", null)]
        [NUnit.Framework.TestCaseAttribute("*u_sp_security_risk_management_plan_list*", "Security Risk Management Plan List", "u_sp_security_risk_management_plan_list.do", "form_body", null)]
        [NUnit.Framework.TestCaseAttribute("*u_sp_plan_control_list*", "Security Control List", "u_sp_plan_control_list.do", "form_body", null)]
        [NUnit.Framework.TestCaseAttribute("*u_sp_self_assessment_list*", "Self Assessment List", "u_sp_self_assessment_list.do?sysparm_orderdesc=number", "form_body", null)]
        public virtual void ResolverList(string name, string listName, string url, string selector, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "dev",
                    "patch",
                    "uat",
                    "prod",
                    "video"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ResolverList", @__tags);
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
 testRunner.Given("I am on the Login Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
 testRunner.When("I login with the username \'rttms.automated.testing\' and password \'autopass\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
 testRunner.Then(string.Format("I go to the \'{0}\' List at \'{1}\'", listName, url), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 10
 testRunner.Then(string.Format("I open a random list item and wait for the element with class \'{0}\'", selector), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 11
 testRunner.Then("I should observe no script errors on the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 12
 testRunner.Then(string.Format("I go to the \'{0}\' List at \'{1}\'", listName, url), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 13
 testRunner.Then(string.Format("I open a random list item and wait for the element with class \'{0}\'", selector), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 14
 testRunner.Then("I should observe no script errors on the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 15
 testRunner.Then(string.Format("I go to the \'{0}\' List at \'{1}\'", listName, url), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 16
 testRunner.Then(string.Format("I open a random list item and wait for the element with class \'{0}\'", selector), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 17
 testRunner.Then("I should observe no script errors on the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
