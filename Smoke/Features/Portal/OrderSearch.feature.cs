// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Smoke.Features.Portal
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Smoke.Features.Portal.OrderSearch")]
    public partial class Smoke_Features_Portal_OrderSearchFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "OrderSearch.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Smoke.Features.Portal.OrderSearch", "\tAs a portal user\r\n\tI want to be able to navigate to the Order page\r\n\tAnd search " +
                    "for a form\r\n\tThen open it see the form has no errors", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("OrderSearch")]
        [NUnit.Framework.CategoryAttribute("dev")]
        [NUnit.Framework.CategoryAttribute("patch")]
        [NUnit.Framework.CategoryAttribute("uat")]
        [NUnit.Framework.CategoryAttribute("prod")]
        [NUnit.Framework.CategoryAttribute("video")]
        [NUnit.Framework.TestCaseAttribute("*TravelForm*", "Request Rio Tinto Projects Travel", null)]
        [NUnit.Framework.TestCaseAttribute("*RequestGeneralIT*", "Request General IT Assistance", null)]
        [NUnit.Framework.TestCaseAttribute("*ChangeContactDetails*", "Change Business Contact Details", null)]
        [NUnit.Framework.TestCaseAttribute("*RenewSoftwareLicence*", "Renew Software Licence or Agreement", null)]
        [NUnit.Framework.TestCaseAttribute("*ReportRemoteAccessProblem*", "Report Remote Access Problem", null)]
        [NUnit.Framework.TestCaseAttribute("*RequestTranslationService*", "Request Translation Service", null)]
        [NUnit.Framework.TestCaseAttribute("*RequestInternetAccess*", "Request Internet Access", null)]
        [NUnit.Framework.TestCaseAttribute("*RequestSoftwareInstall*", "Request Software Install", null)]
        [NUnit.Framework.TestCaseAttribute("*CreateExternalAccessUserAccount*", "Create External Access User Account", null)]
        [NUnit.Framework.TestCaseAttribute("*ReportBusinessSolutionProblem*", "Report Business Solution Problem", null)]
        [NUnit.Framework.TestCaseAttribute("*UninstallSoftware*", "Uninstall Software", null)]
        [NUnit.Framework.TestCaseAttribute("*ReportCyberSecurityIncident*", "Report a Cyber Security Incident", null)]
        [NUnit.Framework.TestCaseAttribute("*CreateFileShare*", "Create File Share", null)]
        public virtual void OrderSearch(string name, string formTitle, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "dev",
                    "patch",
                    "uat",
                    "prod",
                    "video"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("OrderSearch", @__tags);
#line 8
this.ScenarioSetup(scenarioInfo);
#line 9
 testRunner.Given("I am on the Login Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 10
 testRunner.When("I login with the username \'rttms.automated.testing\' and password \'autopass\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
 testRunner.Given("I go to the Portal Order page and wait for it to load", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 12
 testRunner.Then("I wait for 2 seconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 13
 testRunner.Then("I dismiss notifications", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 14
 testRunner.Then(string.Format("I type \'{0}\' in the Search text box", formTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 15
 testRunner.And("I wait for search results to appear", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
 testRunner.When(string.Format("I click the search result with title \'{0}\' and wait for the form to load", formTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 17
 testRunner.Then("I should observe no script errors on the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
